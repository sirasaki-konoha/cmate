#!/bin/sh

os=$(uname -s | tr '[:upper:]' '[:lower:]')
found=0
cmate_found=0

#if cat Cmate.toml > /dev/null 2>&1; then
if [ -e Cmate.toml ]; then
	printf "\e[32m>> \e[0mCmate.toml found in $(pwd)\n"
	cmate_found=1
fi

if [ "$cmate_found" -eq 0 ];then
	printf "Cmate.toml not found!\n"
	exit 1
fi


# if ! command -v "gmake" 2>&1 >/dev/null; then
# 	printf "\e[31mError:\e[0m GNU Make not found!\n" >&2
# 	printf "Please install GNU Make and retry bootstrap.sh\n" >&2
# 	exit 1
# fi

for i in gcc clang cc "zig cc"; do
	if command -v $i > /dev/null 2>&1; then
		printf "\e[32m>> \e[0mCompiler = $i (auto)\n"
		cat <<EOF > "Makefile"
# @generated by cmate bootstrap
PROJECT_NAMES := cmate
CC_cmate	:=$i
EOF
		found=1
		break
	fi
done


if [ "$found" -eq 0 ];then
	printf "\e[31mError:\e[0m No valid C compiler was found\n" >&2
	printf "\e[32mSupported C compilers: \e[0m'\e[33mgcc\e[0m' '\e[36mclang\x1b[0m' '\x1b[34mcc\x1b[0m' '\x1b[35mzig cc\x1b[0m'\n" >&2
	exit 1
fi

cat <<EOF >> "Makefile"
CFLAGS_cmate := -Wall -Wextra -std=c99
LDLIBS_cmate :=
LDFLAGS_cmate :=  -O2  -DDEBUG
SRCDIRS_cmate :=  cmate/src
INCLUDE_DIRS_cmate :=  cmate/include
EXTRA_SOURCES_cmate :=

EOF


cat ./cmate/template/Makefile >> "Makefile"
printf "Makefile generated\n"


if [ "$os" = "netbsd" ]; then
	gmake -j$(sysctl -n hw.ncpu)
else
	gmake -j$(nproc)
fi

./bin/cmate -r cmate && ./bin/cmate -c -b

