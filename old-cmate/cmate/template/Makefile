
# Global flags for release builds
CFLAGS_ALL :=
LDFLAGS_ALL :=

# Directory settings
OBJDIR := .cmate/deps/object
BINDIR := bin

# Default GOAL
.DEFAULT_GOAL := all

# List of all binaries (should be set by the generator)
BINARIES := $(addprefix $(BINDIR)/, $(PROJECT_NAMES))

# Ensure bin directory exists
$(BINDIR):
	@mkdir -p $(BINDIR)

define get_sources
    $(foreach dir,$(SRCDIRS_$(1)),\
        $(wildcard $(dir)/*.c) \
        $(wildcard $(dir)/*/*.c) \
        $(wildcard $(dir)/*/*/*.c) \
        $(wildcard $(dir)/*/*/*/*.c) \
        $(wildcard $(dir)/*/*/*/*/*.c) \
        $(wildcard $(dir)/*/*/*/*/*/*.c) \
        $(wildcard $(dir)/*/*/*/*/*/*/*.c) \
        $(wildcard $(dir)/*/*/*/*/*/*/*/*.c) \
        $(wildcard $(dir)/*/*/*/*/*/*/*/*/*.c) \
        $(wildcard $(dir)/*/*/*/*/*/*/*/*/*/*.c))
endef

# Auto-detect source files for each binary
define GEN_BINARY_RULES
# ===== $(1) =====
# Variables for $(1)
SRCDIRS_$(1) := $$(SRCDIRS_$(1))
INCLUDE_DIRS_$(1) := $$(INCLUDE_DIRS_$(1))
EXTRA_SOURCES_$(1) := $$(EXTRA_SOURCES_$(1))
LDLIBS_$(1) := $$(LDLIBS_$(1))
LDFLAGS_$(1) := $$(LDFLAGS_$(1))
CFLAGS_$(1) := $$(CFLAGS_$(1))
CC_$(1) := $$(CC_$(1))
SOURCES_$(1) := $$(call get_sources,$(1))
SOURCES_$(1) := $$(SOURCES_$(1)) $$(EXTRA_SOURCES_$(1))
OBJECTS_$(1) := $$(patsubst %.c,$$(OBJDIR)/$(1)/%.o,$$(SOURCES_$(1)))
INCLUDES_$(1) := $$(addprefix -I,$$(INCLUDE_DIRS_$(1)))
CFLAGS_$(1) += $$(INCLUDES_$(1)) $$(CFLAGS_ALL)
LDFLAGS_$(1) += $$(LDFLAGS_ALL)

# Build rule for $(1)
$$(BINDIR)/$(1): $$(OBJECTS_$(1)) | $$(BINDIR)
	@echo "  LD	$(1)"
	@$$(CC_$(1)) $$(LDFLAGS_$(1)) $$(OBJECTS_$(1)) -o $$@ $$(LDLIBS_$(1))

# Object file rule for $(1)
$$(OBJDIR)/$(1)/%.o: %.c
	@mkdir -p $$(dir $$@)
	@echo "  CC	$$<"
	@$$(CC_$(1)) $$(CFLAGS_$(1)) -c $$< -o $$@
endef

# Generate rules for each binary
$(foreach bin,$(PROJECT_NAMES),$(eval $(call GEN_BINARY_RULES,$(bin))))

# Default targets
.PHONY: all clean rebuild help info release

# Main build target
all: $(BINARIES)

# Release build target
release:
	@$(MAKE) clean
	@$(MAKE) all CFLAGS_ALL="-DNDEBUG" LDFLAGS_ALL="-s -DNDEBUG -O3 -flto "

clean:
	@echo "CLEAN $(OBJDIR)"
	@rm -rf "$(OBJDIR)"
	@echo "CLEAN	$(BINDIR)"
	@rm -rf "$(BINDIR)"

rebuild: clean all

# Help
help:
	@echo "Usage: make [target]"
	@echo
	@echo "Available targets:"
	@echo "  all      Build all binaries (default)"
	@echo "  release  Build optimized release version"
	@echo "  clean    Remove generated files"
	@echo "  rebuild  Clean and then build all"
	@echo "  help     Show this help message"
	@echo "  info     Show project information"
	@echo
	@echo "Per-binary targets:"
	@echo "  $(PROJECT_NAMES)"
	@echo
	@echo "This Makefile was generated by cmate $(CMATE_VERSION)."
	@echo "If you encounter any issues or bugs, please open an issue at:"
	@echo "  https://github.com/rock-db/cmate"

# Show project structure
info:
	@echo "Project Structure:"
	@echo "  Source Dirs (per binary):"
	@$(foreach bin,$(PROJECT_NAMES),echo "    $(bin): $(SRCDIRS_$(bin))";)
	@echo "  Include Dirs (per binary):"
	@$(foreach bin,$(PROJECT_NAMES),echo "    $(bin): $(INCLUDE_DIRS_$(bin))";)
	@echo "  Binary outputs: $(BINARIES)"
	@echo "  Project names: $(PROJECT_NAMES)"



